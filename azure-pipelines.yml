trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '20.x'

# Smallest step: run Playwright in a single container job using docker run.
steps:
  - checkout: self
    fetchDepth: 1

  - script: node -v && npm -v
    displayName: 'Show Node/npm versions'

  # Use official Playwright image that already has browsers and OS deps
  - task: Bash@3
    displayName: 'Run tests inside official Playwright container'
    inputs:
      targetType: 'inline'
      script: |
        docker run --rm           -v $(Build.SourcesDirectory):/work           -w /work           -e BASE_URL=$(BASE_URL)           mcr.microsoft.com/playwright:v1.48.2-jammy           bash -lc "node -v && npm ci && npx playwright install --with-deps && npm run test:all"

  # Publish JUnit to Tests tab
  - task: PublishTestResults@2
    displayName: 'Publish JUnit test results'
    condition: always()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'reports/junit/**/*.xml'
      testRunTitle: 'Playwright (container job)'

  # Publish HTML report artifact
  - publish: reports/html
    artifact: PlaywrightHtmlReport
    condition: always()

  # Summary
  - script: |
      SUMMARY="$(Build.SourcesDirectory)/summary.md"
      {
        echo "# Containerized Playwright Run"
        echo ""
        echo "HTML report is in the **PlaywrightHtmlReport** artifact."
        echo ""
        echo "BASE_URL: $(BASE_URL)"
        echo "Build: $(Build.BuildNumber)"
        echo "Agent: $(Agent.OS)"
      } > "$SUMMARY"
      echo "##vso[task.uploadsummary]$SUMMARY"
    displayName: 'Attach summary'
    condition: always()
